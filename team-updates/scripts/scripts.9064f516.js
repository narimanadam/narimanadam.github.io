"use strict";angular.module("teamUpdatesApp",["ngAnimate","ngAria","ngCookies","ngMessages","ngResource","ngRoute","ngSanitize","ngTouch","firebase","angularMoment","ui.gravatar"]).config(["$routeProvider",function(a){a.when("/add",{templateUrl:"views/activities.html",controller:"ActivitiesCtrl",resolve:{currentAuth:["Auth",function(a){return a.$requireAuth()}]}}).when("/login",{templateUrl:"views/login.html",controller:"LoginCtrl"}).when("/register",{templateUrl:"views/register.html",controller:"RegisterCtrl"}).otherwise({redirectTo:"/add"})}]).run(["Auth","$rootScope","$location",function(a,b,c){a.$onAuth(function(a){if(a){console.log("Logged in")}else{console.log("logged out")}}),b.$on("$routeChangeError",function(a,b,d,e){"AUTH_REQUIRED"===e&&c.path("/login")})}]),angular.module("teamUpdatesApp").controller("RegisterCtrl",["$scope","Auth","$location",function(a,b,c){b.$getAuth();a.register=function(){b.$createUser({email:a.user.email,password:a.user.password}).then(function(b){var d=new Firebase("https://blinding-torch-7971.firebaseio.com/users/"+b.uid);d.set({displayName:a.user.username,email:a.user.email}),console.log("User created successfully",b),c.path("/")},function(b){a.regError=!0,a.regErrorMessage=b.message,console.log("User not created Successfully")})}}]),angular.module("teamUpdatesApp").controller("LoginCtrl",["$scope","$firebaseAuth","$location","Auth",function(a,b,c,d){a.login=function(){d.$authWithPassword({email:a.user.email,password:a.user.password}).then(function(a){c.path("/"),console.log("Auth successful")},function(b){console.log("Auth Fail"),a.loginError=!0,a.loginErrorMessage=b.message})}}]),angular.module("teamUpdatesApp").service("Auth",["$firebaseAuth",function(a){var b=new Firebase("https://blinding-torch-7971.firebaseio.com");return a(b)}]),angular.module("teamUpdatesApp").controller("HeaderCtrl",["$scope","Auth","$location","$firebaseArray","firebaseRef",function(a,b,c,d,e){d(e.child("users"));a.logoutUser=function(){b.$unauth()},b.$onAuth(function(b){a.user=!!b})}]),angular.module("teamUpdatesApp").service("firebaseRef",["$firebaseArray",function(a){var b=new Firebase("https://blinding-torch-7971.firebaseio.com/");return b}]),angular.module("teamUpdatesApp").filter("currentDate",["$filter",function(a){return function(b){if(null==b)return"";var c=a("date")(new Date(b),"MMM dd yyyy");return c.toUpperCase()}}]),angular.module("teamUpdatesApp").controller("ActivitiesCtrl",["$scope","$firebaseArray","firebaseRef","Auth","$firebaseAuth","currentAuth",function(a,b,c,d,e,f){a.activities=b(c.child("activities")),a.users=b(c.child("users")),a.getAuthor=function(b){return a.users.$getRecord(b)},a.today=(new Date).toJSON(),a.todayDate=moment(a.today).format("YYYY - MM - DD");var g=b(c.child("activities")),h=e(c).$getAuth();a.userData=h.uid,a.addActivity=function(){g.$add({title:a.activity,createdAt:(new Date).toJSON(),userId:a.userData}).then(function(){a.activity=""})},a.filterByToday=function(b){return moment(a.today).isSame(b.createdAt,"day")?!0:void 0},console.log(a.users)}]),angular.module("teamUpdatesApp").run(["$templateCache",function(a){a.put("views/activities.html",'<form class="add-activity-form"> <div class="form-group"> <input type="text" class="form-control" placeholder="Write something you have done today ..." ng-model="activity"> <button class="btn btn-add" ng-click="addActivity()">Add Activity</button> </div> </form> <div class="panel panel-default" ng-repeat="activity in activities | filter:filterByToday"> <div class="panel-body"> <div class="author-img"> <img gravatar-src="\'{{getAuthor(activity.userId).email}}\'" gravatar-size="40"> </div> <div class="activity-title"> {{activity.title}} <span class="activity-time"> <span am-time-ago="activity.createdAt"></span> </span> </div> <div class="user-info"> <span class="created-by">created by:</span> <span class="user-name"> {{getAuthor(activity.userId).displayName}}</span> </div> </div> </div> <div class="jumbotron text-center" ng-if="(activities | filter:filterByToday).length<1"> <h1>Good Morning :)</h1> <h3>Be the first to add your Activities today </h3> </div>'),a.put("views/header.html",'<div class="header"> <div class="navbar navbar-default" role="navigation"> <div class="container"> <div class="navbar-header"> <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#js-navbar-collapse"> <span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> <a class="navbar-brand" href="#/">Team Updates</a> </div> <div class="collapse navbar-collapse navbar-right" id="js-navbar-collapse"> <ul class="nav navbar-nav"> <li class="active"><a href="#/" ng-if="user">Activities</a></li> <!--           <li><a ng-href="#/add" ng-if="user">Update</a></li>\n --> <li><a ng-href="#/login" ng-if="!user">Log In</a></li> <li><a ng-href="#/register" ng-if="!user">Register</a></li> <li><a ng-href="#/login" ng-if="user" ng-click="logoutUser()">Log out</a></li> </ul> </div> </div> </div> </div>'),a.put("views/login.html",'<div class="form-heading"> <h1>Login</h1> </div> <form class="login-form" name="loginForm"> <div class="form-group" ng-class="{\'has-error\': loginForm.email.$invalid}"> <input type="email" placeholder="Email" ng-model="user.email" class="form-control" name="email"> <p class="help-block" ng-if="loginForm.email.$invalid">Enter a valid email address</p> </div> <div class="form-group" ng-class="{\'has-error\': loginForm.password.$invalid}"> <input type="password" placeholder="Password" ng-model="user.password" ng-minlength="8" class="form-control" name="password"> <p class="help-block" ng-if="loginForm.password.$invalid">Enter at least 8 characters</p> </div> <div class="alert alert-danger" ng-if="loginError">{{loginErrorMessage}}</div> <button type="button" class="btn btn-submit pull-right" ng-disabled="loginForm.email.$invalid || loginForm.password.$invalid" ng-click="login()">Log In</button> </form>'),a.put("views/register.html",'<div class="form-heading"> <h1>Register</h1> </div> <form class="register-form" name="regForm"> <div class="form-group" ng-class="{\'has-error\': regForm.username.$invalid && regForm.username.$dirty}"> <input type="text" class="form-control" name="username" ng-model="user.username" placeholder="Username" required> <p class="help-block" ng-if="regForm.username.$invalid && regForm.username.$dirty">Please enter username</p> </div> <div class="form-group" ng-class="{\'has-error\': regForm.email.$invalid}"> <input type="email" placeholder="Email" ng-model="user.email" class="form-control" name="email"> <p class="help-block" ng-if="regForm.email.$invalid">Enter a valid email address</p> </div> <div class="form-group" ng-class="{\'has-error\': regForm.password.$invalid}"> <input type="password" placeholder="Password" ng-model="user.password" ng-minlength="8" class="form-control" name="password"> <p class="help-block" ng-if="regForm.password.$invalid">Enter at least 8 characters</p> </div> <p ng-if="regError" class="alert alert-danger">{{regErrorMessage}}</p> <button type="button" class="btn btn-submit pull-right" ng-disabled="regForm.email.$invalid || regForm.password.$invalid" ng-click="register()">Register</button> </form>')}]);